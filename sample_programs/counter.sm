//Synchronous Counter with 3 T-Flip-Flops (0 to 7) and Display

//	Prints a number to standard out based on
// 	 states of the TFFs
void DFA display()
{
	start
	{
		print0 	<- (state("clock") == "rising" 
						&& state("TFF1") == "high" 
							&& state("TFF2") == "high" 
								&& state("TFF3") == "high");	
		print1 	<- (state("clock") == "rising" 
						&& state("TFF1") == "start" 
							&& state("TFF2") == "start"
								&& state("TFF3") == "start");
		print2 	<- (state("clock") == "rising" 
						&& state("TFF1") == "high" 
							&& state("TFF2") == "start"
								&& state("TFF3") == "start");
		print3 	<- (state("clock") == "rising" 
						&& state("TFF1") == "start" 
							&& state("TFF2") == "high"
								&& state("TFF3") == "start");
		print4	<- (state("clock") == "rising" 
						&& state("TFF1") == "high" 
							&& state("TFF2") == "high"
								&& state("TFF3") == "start");
		print5 	<- (state("clock") == "rising" 
						&& state("TFF1") == "start" 
							&& state("TFF2") == "start"
								&& state("TFF3") == "high");
		print6 	<- (state("clock") == "rising" 
						&& state("TFF1") == "high" 
							&& state("TFF2") == "start"
								&& state("TFF3") == "high");
		print7 	<- (state("clock") == "rising" 
						&& state("TFF1") == "start" 
							&& state("TFF2") == "high"
								&& state("TFF3") == "high");
		start 	<- *;		
	}

	print0
	{
		print("0");
		start 	<- *;
	}

	print1
	{
		print("1");
		start 	<- *;
	}

	print2
	{
		print("2");
		start 	<- *;
	}

	print3
	{
		print("3");
		start 	<- *;
	}
	print4
	{
		print("4");
		start 	<- *;
	}
	print5
	{
		print("5");
		start 	<- *;
	}
	print6
	{
		print("6");
		start 	<- *;
	}
	print7
	{
		print("7");
		start 	<- *;
	}	
}

// DFA to represent a clock
//  halfPeriod: integer to represent period/2 in ms
void DFA clock(int halfPeriod)
{
	// Start == low	
	// Wait halfPeriod ms, then toggle
	start
	{		
		sleep(halfPeriod);
		rising		<- *;				
	}

	// state that triggers a toggle for the TFFs
	rising
	{		
		high  	<- *;
	}			
	
	high
	{
		sleep(halfPeriod);
		start 	<- *;
	}	
}

// 1st T-FlipFlop in counter
//  Toggles on every rising clock
void DFA TFF1()
{
	// low output
	start
	{
		high 	<- (state("clock") == "rising");
		start 	<- *;
	}

	// high output
	high
	{
		start	<- (state("clock") == "rising");
		high 	<- *;
	}		
}

// 2nd T-FlipFlop in counter
//	Toggles on every clock only if TFF1 is high
void DFA TFF2()
{
	// low output
	start
	{
		high	<-(state("clock") == "rising" 
					&& state("TFF1") == "high");
		start 	<- *;
	}

	// high output
	high
	{
		start	<-(state("clock") == "rising" 
					&& state("TFF1") == "high");
		high 	<- *;
	}		
}

// 3rd T-FlipFlop in counter
//	Toggles on every clock only if TFF1 AND TTF2 is high
void DFA TFF3()
{
	// low output
	start
	{
		high	<-(state("clock") == "rising" 
					&& state("TFF1") == "high"
						&& state("TFF2") == "high");
		start 	<- *;
	}

	// high output
	high
	{
		start	<-(state("clock") == "rising" 
					&& state("TFF1") == "high"
						&& state("TFF2") == "high");
		high 	<- *;
	}		
}

void DFA main()							
{
	int halfPeriod = 400;

	start											
	{	
		print("0");
		concurrent(clock(halfPeriod), TFF1(), TFF2(), TFF3(), display());
		return;
	}	
}