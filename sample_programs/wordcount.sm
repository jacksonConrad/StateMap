DFA main (stack<string> main)							
{
	Map<string, int> wordCount;							
	
	start											
	{	
		print 		<- main.isEmpty;					
		new			<- !wordCount.contains(main.peek);	
		increment	<- *;
	}
	
	new
	{
		wordCount.put(main.pop, 1);			
		start 		<- *;
	}
	
	increment
	{
		string word = main.pop;
		wordCount.put(word, ++wordCount.get(word));
		start		<- *;
	}		
	
	print
	{
		printMap(wordCount);
		return;
	}
}

void DFA printMap(Map<string, int> map)
{
	Stack<string> words;

	start
	{
		words = map.keyStack;
		done 		<- words.isEmpty;					
		printEntry	<- *;				
	}			
	
	printEntry
	{
		string word = words.pop;
		print(word + " " + map.get(word) + "\n;
		start		<- *;
	}		

	done
	{
		return;
	}
}
